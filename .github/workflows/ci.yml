name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Code Quality
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: Verify build output
        run: |
          test -f dist/index.js
          test -x dist/index.js
          head -n 1 dist/index.js | grep -q "#!/usr/bin/env node"

  test-fast:
    name: Fast Test (Node ${{ matrix.node-version }})
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          autocrlf: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-fast-${{ matrix.node-version }}
          path: test-results/
          retention-days: 7

  test-cross-platform:
    name: Cross-Platform Test (Node ${{ matrix.node-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: [20]  # Latest stable for cross-platform testing
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          autocrlf: false

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Configure Git (Windows)
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit

      - name: Run integration tests
        run: npm run test:integration

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}-${{ matrix.os }}
          path: test-results/
          retention-days: 7

  coverage:
    name: Test Coverage
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  functional:
    name: Functional Tests
    runs-on: self-hosted
    needs: [quality]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test CLI functionality
        run: |
          # Test help command
          node dist/index.js --help
          
          # Test init command (dry run)
          node dist/index.js init --output ./test-statusline.sh --no-install
          test -f ./test-statusline.sh
          
          # Test preview command
          node dist/index.js preview ./test-statusline.sh

      - name: Test npm package installation
        run: |
          # Pack the package
          npm pack
          
          # Test global installation
          npm install -g sponzig-cc-statusline-*.tgz
          
          # Test CLI is available globally
          cc-statusline --help
          
          # Test init command works globally
          cc-statusline init --output ./global-test-statusline.sh --no-install
          test -f ./global-test-statusline.sh

  security:
    name: Security Audit
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: |
          # Check if there are any high/critical vulnerabilities
          if npm audit --audit-level=high --json | jq -e '.metadata.vulnerabilities.high > 0 or .metadata.vulnerabilities.critical > 0'; then
            echo "High or critical vulnerabilities found!"
            npm audit --audit-level=high
            exit 1
          fi

  build-artifacts:
    name: Build Artifacts
    runs-on: self-hosted
    needs: [quality, test-fast, test-cross-platform, coverage]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Create package
        run: npm pack

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            *.tgz
          retention-days: 90