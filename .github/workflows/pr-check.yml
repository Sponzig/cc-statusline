name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  # Fast validation for immediate feedback
  quick-check:
    name: Quick Validation
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick lint and type check
        run: |
          echo "üîç Running type check..."
          npx tsc --noEmit
          echo "‚úÖ Type check passed"

      - name: Quick build test
        run: |
          echo "üîß Testing build..."
          npm run build
          echo "‚úÖ Build successful"

  # Detailed analysis and validation
  analysis:
    name: Code Analysis
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check bundle size impact
        id: bundle-size
        run: |
          # Build current PR
          npm run build
          CURRENT_SIZE=$(stat -c%s dist/index.js)
          
          # Build main branch for comparison
          git fetch origin main:main
          git checkout main
          npm ci
          npm run build
          MAIN_SIZE=$(stat -c%s dist/index.js)
          
          # Calculate difference
          SIZE_DIFF=$((CURRENT_SIZE - MAIN_SIZE))
          SIZE_DIFF_PERCENT=$(awk "BEGIN {printf \"%.1f\", $SIZE_DIFF/$MAIN_SIZE*100}")
          
          echo "current_size=$CURRENT_SIZE" >> $GITHUB_OUTPUT
          echo "main_size=$MAIN_SIZE" >> $GITHUB_OUTPUT
          echo "size_diff=$SIZE_DIFF" >> $GITHUB_OUTPUT
          echo "size_diff_percent=$SIZE_DIFF_PERCENT" >> $GITHUB_OUTPUT
          
          # Alert if bundle size increased significantly
          if [ $SIZE_DIFF -gt 10000 ]; then
            echo "::warning::Bundle size increased by ${SIZE_DIFF} bytes (${SIZE_DIFF_PERCENT}%)"
          fi

      - name: Comment bundle size impact
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const currentSize = '${{ steps.bundle-size.outputs.current_size }}';
            const mainSize = '${{ steps.bundle-size.outputs.main_size }}';
            const sizeDiff = '${{ steps.bundle-size.outputs.size_diff }}';
            const sizeDiffPercent = '${{ steps.bundle-size.outputs.size_diff_percent }}';
            
            const formatSize = (bytes) => {
              const kb = bytes / 1024;
              return kb < 1 ? `${bytes}B` : `${kb.toFixed(1)}KB`;
            };
            
            const emoji = sizeDiff > 0 ? 'üìà' : sizeDiff < 0 ? 'üìâ' : 'üìä';
            const impact = Math.abs(sizeDiffPercent) > 5 ? '‚ö†Ô∏è Significant' : 
                          Math.abs(sizeDiffPercent) > 1 ? '‚ö° Moderate' : '‚úÖ Minimal';
            
            const body = `## ${emoji} Bundle Size Impact
            
            | Metric | Value |
            |--------|--------|
            | Current Size | ${formatSize(currentSize)} |
            | Main Branch Size | ${formatSize(mainSize)} |
            | **Difference** | **${sizeDiff > 0 ? '+' : ''}${formatSize(sizeDiff)} (${sizeDiffPercent}%)** |
            | Impact Level | ${impact} |
            
            ${Math.abs(sizeDiffPercent) > 10 ? '‚ö†Ô∏è **Large bundle size change detected!** Please review if this increase is justified.' : ''}
            `;
            
            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const existingComment = comments.data.find(comment => 
              comment.body.includes('Bundle Size Impact')
            );
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # Test PR functionality
  functional-test:
    name: Functional Test
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test CLI commands
        run: |
          echo "üß™ Testing CLI functionality..."
          
          # Test help
          node dist/index.js --help
          
          # Test init with different configurations
          node dist/index.js init --output ./pr-test-basic.sh --no-install
          test -f ./pr-test-basic.sh
          
          # Test preview
          node dist/index.js preview ./pr-test-basic.sh
          
          echo "‚úÖ All CLI tests passed"

      - name: Test package installation
        run: |
          echo "üì¶ Testing package installation..."
          
          # Create package
          npm pack
          
          # Test local installation
          mkdir test-install
          cd test-install
          npm init -y
          npm install ../sponzig-cc-statusline-*.tgz
          
          # Test CLI is available
          npx cc-statusline --help
          
          echo "‚úÖ Package installation test passed"

  # Security and dependency check
  security-check:
    name: Security Review
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          echo "üîí Running security audit..."
          npm audit --audit-level=moderate
          echo "‚úÖ Security audit passed"

      - name: Check for secrets in PR
        run: |
          echo "üîç Checking for potential secrets..."
          
          # Check for common secret patterns in changed files
          git diff origin/main...HEAD --name-only | xargs grep -l -i -E "(password|secret|key|token|api)" || true
          
          # Check for hardcoded URLs or tokens
          if git diff origin/main...HEAD | grep -E "(https?://.*token|api[_-]?key|secret)" --color=never; then
            echo "::error::Potential secrets detected in changes"
            exit 1
          fi
          
          echo "‚úÖ No secrets detected"

  # PR metadata and quality gates
  pr-quality:
    name: PR Quality Check
    runs-on: self-hosted
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Check PR title and description
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          echo "üîç Validating PR title: $PR_TITLE"
          
          # Check title format (loose validation)
          if [[ ${#PR_TITLE} -lt 10 ]]; then
            echo "::warning::PR title is quite short. Consider adding more context."
          fi
          
          # Check for description
          if [[ -z "$PR_BODY" || ${#PR_BODY} -lt 20 ]]; then
            echo "::warning::PR description is missing or very short. Consider adding more details about the changes."
          fi
          
          echo "‚úÖ PR metadata check completed"

      - name: Check commit messages
        run: |
          echo "üìù Checking commit message quality..."
          
          # Get commits in this PR
          git log --oneline origin/main..HEAD | while read commit; do
            echo "Checking: $commit"
          done
          
          # Count commits
          COMMIT_COUNT=$(git rev-list --count origin/main..HEAD)
          echo "Total commits in PR: $COMMIT_COUNT"
          
          if [ $COMMIT_COUNT -gt 10 ]; then
            echo "::warning::This PR has many commits ($COMMIT_COUNT). Consider squashing some commits before merge."
          fi

  # Summary check
  # Cross-platform compatibility check for PRs
  cross-platform-test:
    name: Cross-Platform PR Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          autocrlf: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git (Windows)
        if: runner.os == 'Windows'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:unit

      - name: Test build
        run: npm run build

  pr-summary:
    name: PR Summary
    runs-on: self-hosted
    needs: [quick-check, analysis, functional-test, security-check, pr-quality, cross-platform-test]
    if: always() && github.event.pull_request.draft == false
    steps:
      - name: PR Status Summary
        run: |
          echo "## üìã PR Validation Summary"
          echo ""
          echo "| Check | Status |"
          echo "|-------|--------|"
          echo "| Quick Check | ${{ needs.quick-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo "| Code Analysis | ${{ needs.analysis.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo "| Functional Test | ${{ needs.functional-test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo "| Security Check | ${{ needs.security-check.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo "| PR Quality | ${{ needs.pr-quality.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo "| Cross-Platform | ${{ needs.cross-platform-test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |"
          echo ""
          
          # Overall status
          if [[ "${{ needs.quick-check.result }}" == "success" && \
                "${{ needs.analysis.result }}" == "success" && \
                "${{ needs.functional-test.result }}" == "success" && \
                "${{ needs.security-check.result }}" == "success" && \
                "${{ needs.cross-platform-test.result }}" == "success" ]]; then
            echo "üéâ **All checks passed!** This PR is ready for review."
          else
            echo "‚ö†Ô∏è **Some checks failed.** Please review and fix issues before merging."
            exit 1
          fi